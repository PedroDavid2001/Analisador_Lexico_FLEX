import java_cup.runtime.*;
import javax.swing.JOptionPane;

parser code {:
    public parser (java.io.Reader input) {
        super(new AnalisadorLexico(input));
    }
:};

terminal            SOME, ALL, VALUE, MIN, MAX, EXACTLY, THAT, NOT, AND, OR, ONLY; 
terminal            MAIOR, MENOR, MAIORIG, MENORIG, ABREPAR, FECHAPAR, ABRECHAVE, FECHACHAVE, VIRGULA, NOVALINHA;
terminal String     NUMERO;
terminal String     HAS, IS, CLASSE, CLASSECOMP, CLASSEUNDER, INT, FLOAT, STRING_LITERAL;

non terminal definida, cl_def, desc_def, linha_def, fat_def, final_def,
    primitiva, cl_pri, linha_pri, desc_pri, final_pri, r_pri, enumerada,
    linha_enu, r_enu, coberta, linha_cob, r_cob, nome_classe, inicial, segunda, terceira, quarta;


start with inicial;

inicial     ::= definida
            | segunda
;

segunda     ::= coberta
             | terceira
;

terceira   ::= primitiva
            | quarta
;

quarta     ::= enumerada;

definida    ::= nome_classe NOVALINHA linha_def ;

linha_def   ::= AND ABREPAR fat_def;

fat_def     ::= HAS desc_def FECHAPAR
            | IS desc_def FECHAPAR
;

desc_def    ::= SOME final_def
            | MIN NUMERO final_def
            | MAX NUMERO final_def
            | EXACTLY NUMERO final_def
;

final_def   ::= nome_classe
            | INT
            | FLOAT
            | ABREPAR nome_classe linha_def FECHAPAR
;

primitiva   ::= nome_classe NOVALINHA cl_pri;

cl_pri      ::= linha_pri NOVALINHA cl_pri
            | /* Empty */

;

linha_pri   ::= HAS desc_pri
            | IS desc_pri
;

desc_pri    ::= SOME nome_classe
            | ONLY ABREPAR final_pri FECHAPAR
;

final_pri   ::= nome_classe r_pri;

r_pri       ::= OR nome_classe r_pri
            | /* Empty */

;

enumerada   ::= nome_classe NOVALINHA ABRECHAVE linha_enu FECHACHAVE;


linha_enu   ::= nome_classe r_enu;


r_enu       ::= VIRGULA nome_classe r_enu
            | /* Empty */

;

coberta     ::= nome_classe NOVALINHA linha_cob;


linha_cob   ::= nome_classe r_cob;


r_cob       ::= OR nome_classe r_cob
            | /* Empty */

;

nome_classe ::= CLASSE
            | CLASSECOMP
            | CLASSEUNDER
;
